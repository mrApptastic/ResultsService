// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonAPI.Data;

#nullable disable

namespace PersonAPI.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20221107185618_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PersonAPI.Data.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstNames")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nationality")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("NationalityPublicId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PlaceOfBirthPublicId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Wrestling_Persons");
                });

            modelBuilder.Entity("PersonAPI.Data.PersonRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Team")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TeamPublicId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Wrestling_Roles");
                });

            modelBuilder.Entity("PersonPersonRole", b =>
                {
                    b.Property<int>("PersonsId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("PersonsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PersonPersonRole");
                });

            modelBuilder.Entity("PersonPersonRole", b =>
                {
                    b.HasOne("PersonAPI.Data.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonAPI.Data.PersonRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
